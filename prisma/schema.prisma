generator client {
  provider             = "prisma-client-py"
  recursive_type_depth = 5
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             Int      @id @default(autoincrement())
  createdAt      DateTime @default(now()) @map("created_at")
  updatedAt      DateTime @updatedAt @map("updated_at")
  dni            Int
  username       String   @db.VarChar(50)
  firstName      String?  @map("first_name") @db.VarChar(50)
  lastName       String?  @map("last_name") @db.VarChar(50)
  email          String   @unique @db.VarChar(100)
  headquarter    Int?     @map("headquarter")
  permissions    Json?    @map("permissions")
  hashedPassword String   @map("hashed_password") @db.VarChar(255)
  isActive       Boolean  @default(true) @map("is_active")

  @@map("users") // Esto cambiar√° el nombre de la tabla a 'users' en la base de datos
}

model Unit {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  carPlate  String   @map("car_plate") @db.VarChar(10)
  driverId  Int      @map("driver_id")
  driver    Driver   @relation(fields: [driverId], references: [id])
  cameras   Camera[]
  reports   Report[]

  @@map("units")
}

model Driver {
  id        Int      @id @default(autoincrement())
  name      String   @db.VarChar(100)
  lastName  String   @map("last_name") @db.VarChar(100)
  dni       Int
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  units     Unit[]

  @@map("drivers")
}

model Camera {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  name      String?  @map("name") @db.VarChar(100)
  location  String?  @db.VarChar(255)
  unitId    Int?     @map("unit_id")
  unit      Unit?    @relation(fields: [unitId], references: [id])
  url       String?  @db.Text

  @@map("cameras")
}

model Report {
  id           Int      @id @default(autoincrement())
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt @map("updated_at")
  address      String?  @db.VarChar(255)
  incident     String?  @db.VarChar(255)
  trackingLink String?  @map("tracking_link") @db.Text
  image        Bytes?   @db.ByteA
  unitId       Int?     @map("unit_id")
  unit         Unit?    @relation(fields: [unitId], references: [id])

  @@map("reports")
}
